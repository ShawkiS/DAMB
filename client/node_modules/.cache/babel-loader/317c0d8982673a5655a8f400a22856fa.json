{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAMB-Marketplace\\\\client\\\\src\\\\routes\\\\Search.tsx\";\nimport React, { PureComponent } from 'react';\nimport queryString from 'query-string';\nimport { Logger } from '@oceanprotocol/squid';\nimport Spinner from '../components/atoms/Spinner';\nimport Route from '../components/templates/Route';\nimport { User } from '../context/User';\nimport Asset from '../components/molecules/Asset';\nimport Pagination from '../components/molecules/Pagination';\nimport styles from './Search.module.scss';\n\nvar Search =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Search, _PureComponent);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      results: [],\n      totalResults: 0,\n      offset: 25,\n      totalPages: 1,\n      currentPage: 0,\n      isLoading: true\n    };\n    _this.searchTerm = queryString.parse(_this.props.location.search).text;\n    _this.searchAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var searchQuery, search;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchQuery = {\n                offset: _this.state.offset,\n                page: _this.state.currentPage,\n                query: {\n                  text: [_this.searchTerm],\n                  price: [-1, 1]\n                },\n                sort: {\n                  datePublished: 1\n                }\n              };\n              _context.next = 3;\n              return _this.context.ocean.aquarius.queryMetadata(searchQuery);\n\n            case 3:\n              search = _context.sent;\n\n              _this.setState({\n                results: search.results,\n                totalResults: search.totalResults,\n                totalPages: search.totalPages,\n                currentPage: search.page,\n                // first page is always 0 in response\n                isLoading: false\n              });\n\n              Logger.log(\"Loaded \".concat(_this.state.results.length, \" assets\"));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.setPage = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n\n      _this.searchAssets();\n    };\n\n    _this.renderResults = function () {\n      return _this.state.isLoading ? React.createElement(Spinner, {\n        message: \"Searching...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : _this.state.results && _this.state.results.length ? React.createElement(\"div\", {\n        className: styles.results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, _this.state.results.map(function (asset) {\n        return React.createElement(Asset, {\n          key: asset.id,\n          asset: asset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"No data sets found.\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.searchAssets();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          totalResults = _this$state.totalResults,\n          totalPages = _this$state.totalPages,\n          currentPage = _this$state.currentPage;\n      return React.createElement(Route, {\n        title: \"\".concat(totalResults > 0 ? totalResults : '', \" Results for <span>\").concat(this.searchTerm, \"</span>\"),\n        titleReverse: true,\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.renderResults(), React.createElement(Pagination, {\n        totalPages: totalPages,\n        currentPage: currentPage,\n        prevPage: currentPage - 1,\n        setPage: this.setPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(PureComponent);\n\nexport { Search as default };\nSearch.contextType = User;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\DAMB-Marketplace\\client\\src\\routes\\Search.tsx"],"names":["React","PureComponent","queryString","Logger","Spinner","Route","User","Asset","Pagination","styles","Search","state","results","totalResults","offset","totalPages","currentPage","isLoading","searchTerm","parse","props","location","search","text","searchAssets","searchQuery","page","query","price","sort","datePublished","context","ocean","aquarius","queryMetadata","setState","log","length","setPage","renderResults","map","asset","id","contextType"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport queryString from 'query-string'\nimport { Logger } from '@oceanprotocol/squid'\nimport Spinner from '../components/atoms/Spinner'\nimport Route from '../components/templates/Route'\nimport { User } from '../context/User'\nimport Asset from '../components/molecules/Asset'\nimport Pagination from '../components/molecules/Pagination'\nimport styles from './Search.module.scss'\n\ninterface SearchProps {\n    location: Location\n    history: History\n}\n\ninterface SearchState {\n    results: any[]\n    totalResults: number\n    offset: number\n    totalPages: number\n    currentPage: number\n    isLoading: boolean\n}\n\nexport default class Search extends PureComponent<SearchProps, SearchState> {\n    public state = {\n        results: [],\n        totalResults: 0,\n        offset: 25,\n        totalPages: 1,\n        currentPage: 0,\n        isLoading: true\n    }\n\n    private readonly searchTerm = queryString.parse(this.props.location.search)\n        .text\n\n    public componentDidMount() {\n        this.searchAssets()\n    }\n\n    private searchAssets = async () => {\n        const searchQuery = {\n            offset: this.state.offset,\n            page: this.state.currentPage,\n            query: {\n                text: [this.searchTerm],\n                price: [-1, 1]\n            },\n            sort: {\n                datePublished: 1\n            }\n        }\n\n        const search = await this.context.ocean.aquarius.queryMetadata(\n            searchQuery\n        )\n        this.setState({\n            results: search.results,\n            totalResults: search.totalResults,\n            totalPages: search.totalPages,\n            currentPage: search.page, // first page is always 0 in response\n            isLoading: false\n        })\n        Logger.log(`Loaded ${this.state.results.length} assets`)\n    }\n\n    private setPage = (page: number) => {\n        this.setState({ currentPage: page })\n        this.searchAssets()\n    }\n\n    public renderResults = () =>\n        this.state.isLoading ? (\n            <Spinner message=\"Searching...\" />\n        ) : this.state.results && this.state.results.length ? (\n            <div className={styles.results}>\n                {this.state.results.map((asset: any) => (\n                    <Asset key={asset.id} asset={asset} />\n                ))}\n            </div>\n        ) : (\n            <div>No data sets found.</div>\n        )\n\n    public render() {\n        const { totalResults, totalPages, currentPage } = this.state\n\n        return (\n            <Route\n                title={`${\n                    totalResults > 0 ? totalResults : ''\n                } Results for <span>${this.searchTerm}</span>`}\n                titleReverse\n                wide\n            >\n                {this.renderResults()}\n\n                <Pagination\n                    totalPages={totalPages}\n                    currentPage={currentPage}\n                    prevPage={currentPage - 1}\n                    setPage={this.setPage}\n                />\n            </Route>\n        )\n    }\n}\n\nSearch.contextType = User\n"]},"metadata":{},"sourceType":"module"}