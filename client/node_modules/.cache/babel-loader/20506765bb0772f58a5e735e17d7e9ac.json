{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\App.tsx\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Logger } from '@oceanprotocol/squid';\nimport Header from './components/organisms/Header';\nimport Footer from './components/organisms/Footer';\nimport Spinner from './components/atoms/Spinner';\nimport { User } from './context/User';\nimport { provideOcean } from './ocean';\nimport Routes from './Routes';\nimport './styles/global.scss';\nimport styles from './App.module.scss';\nimport '@oceanprotocol/typographies/css/ocean-typo.css';\nimport './styles/global.css';\nimport { nodeHost, nodePort, nodeScheme, faucetHost, faucetPort, faucetScheme } from './config/config';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.startLogin = function (event) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      _this.startLoginProcess();\n    };\n\n    _this.requestFromFaucet =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.account !== '')) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(faucetScheme, \"://\").concat(faucetHost, \":\").concat(faucetPort, \"/faucet\"), {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  address: _this.state.account,\n                  agent: 'commons'\n                })\n              });\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.json());\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              Logger.log('requestFromFaucet', _context.t0);\n\n            case 11:\n              _context.next = 13;\n              break;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    _this.state = {\n      isLogged: false,\n      isLoading: true,\n      isWeb3: false,\n      isNile: false,\n      balance: {\n        eth: 0,\n        ocn: 0\n      },\n      network: '',\n      web3: new Web3(new Web3.providers.HttpProvider(\"\".concat(nodeScheme, \"://\").concat(nodeHost, \":\").concat(nodePort))),\n      account: '',\n      ocean: {},\n      startLogin: _this.startLogin,\n      requestFromFaucet: _this.requestFromFaucet,\n      message: 'Connecting to Ocean...'\n    };\n    _this.startLoginProcess =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var accounts, balance;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(_this.state.isWeb3 && window.ethereum)) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context2.next = 6;\n              return _this.state.ocean.accounts.list();\n\n            case 6:\n              accounts = _context2.sent;\n\n              if (!(accounts.length > 0)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 10;\n              return accounts[0].getBalance();\n\n            case 10:\n              balance = _context2.sent;\n\n              _this.setState({\n                isLogged: true,\n                balance: balance,\n                account: accounts[0].getId()\n              });\n\n              _context2.next = 14;\n              break;\n\n            case 14:\n              _context2.next = 16;\n              break;\n\n            case 16:\n              _context2.next = 21;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](0);\n              Logger.log('error logging', _context2.t0); // error in logging process\n              // show error\n              // rerun bootstrap process?\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 18]]);\n    }));\n    _this.bootstrap =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var web3, _ref4, ocean, accounts, network, isNile, balance, _ref5, _ocean, _network, _isNile;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              if (!window.web3) {\n                _context3.next = 24;\n                break;\n              }\n\n              web3 = new Web3(window.web3.currentProvider);\n              _context3.next = 5;\n              return provideOcean(web3);\n\n            case 5:\n              _ref4 = _context3.sent;\n              ocean = _ref4.ocean;\n              _context3.next = 9;\n              return ocean.accounts.list();\n\n            case 9:\n              accounts = _context3.sent;\n              _context3.next = 12;\n              return ocean.keeper.getNetworkName();\n\n            case 12:\n              network = _context3.sent;\n              isNile = network === 'Nile';\n\n              if (!(accounts.length > 0)) {\n                _context3.next = 21;\n                break;\n              }\n\n              _context3.next = 17;\n              return accounts[0].getBalance();\n\n            case 17:\n              balance = _context3.sent;\n\n              _this.setState({\n                isWeb3: true,\n                isLogged: true,\n                isNile: isNile,\n                ocean: ocean,\n                web3: web3,\n                balance: balance,\n                network: network,\n                account: accounts[0].getId(),\n                isLoading: false\n              });\n\n              _context3.next = 22;\n              break;\n\n            case 21:\n              _this.setState({\n                isWeb3: true,\n                isNile: isNile,\n                ocean: ocean,\n                web3: web3,\n                network: network,\n                isLoading: false\n              });\n\n            case 22:\n              _context3.next = 33;\n              break;\n\n            case 24:\n              _context3.next = 26;\n              return provideOcean(_this.state.web3);\n\n            case 26:\n              _ref5 = _context3.sent;\n              _ocean = _ref5.ocean;\n              _context3.next = 30;\n              return _ocean.keeper.getNetworkName();\n\n            case 30:\n              _network = _context3.sent;\n              _isNile = _network === 'Nile';\n\n              _this.setState({\n                isNile: _isNile,\n                ocean: _ocean,\n                network: _network,\n                isLoading: false\n              });\n\n            case 33:\n              _context3.next = 39;\n              break;\n\n            case 35:\n              _context3.prev = 35;\n              _context3.t0 = _context3[\"catch\"](0);\n              // error in bootstrap process\n              // show error connecting to ocean\n              Logger.log('web3 error', _context3.t0);\n\n              _this.setState({\n                isLoading: false\n              });\n\n            case 39:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 35]]);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.bootstrap();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: styles.app,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(User.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        style: {\n          maxWidth: '92rem'\n        },\n        className: styles.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.state.isLoading ? React.createElement(\"div\", {\n        className: styles.loader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })) : React.createElement(Routes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\App.tsx"],"names":["React","Component","Web3","BrowserRouter","Router","Logger","Header","Footer","Spinner","User","provideOcean","Routes","styles","nodeHost","nodePort","nodeScheme","faucetHost","faucetPort","faucetScheme","App","startLogin","event","preventDefault","startLoginProcess","requestFromFaucet","state","account","fetch","method","headers","Accept","body","JSON","stringify","address","agent","response","json","log","isLogged","isLoading","isWeb3","isNile","balance","eth","ocn","network","web3","providers","HttpProvider","ocean","message","window","ethereum","enable","accounts","list","length","getBalance","setState","getId","bootstrap","currentProvider","keeper","getNetworkName","app","maxWidth","main","loader"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Logger } from '@oceanprotocol/squid'\nimport Header from './components/organisms/Header'\nimport Footer from './components/organisms/Footer'\nimport Spinner from './components/atoms/Spinner'\nimport { User } from './context/User'\nimport { provideOcean } from './ocean'\nimport Routes from './Routes'\nimport './styles/global.scss'\nimport styles from './App.module.scss'\nimport '@oceanprotocol/typographies/css/ocean-typo.css'\nimport './styles/global.css'\n\nimport {\n    nodeHost,\n    nodePort,\n    nodeScheme,\n    faucetHost,\n    faucetPort,\n    faucetScheme\n} from './config/config'\n\ndeclare global {\n    interface Window {\n        web3: Web3\n        ethereum: any\n    }\n}\n\ninterface AppState {\n    isLogged: boolean\n    isLoading: boolean\n    isWeb3: boolean\n    isNile: boolean\n    account: string\n    balance: {\n        eth: number\n        ocn: number\n    }\n    network: string\n    web3: Web3\n    ocean: any\n    startLogin: () => void\n    message: string\n}\n\nclass App extends Component<{}, AppState> {\n    public startLogin = (event?: any) => {\n        if (event) {\n            event.preventDefault()\n        }\n        this.startLoginProcess()\n    }\n\n    private requestFromFaucet = async () => {\n        if (this.state.account !== '') {\n            try {\n                const response = await fetch(\n                    `${faucetScheme}://${faucetHost}:${faucetPort}/faucet`,\n                    {\n                        method: 'POST',\n                        headers: {\n                            Accept: 'application/json',\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            address: this.state.account,\n                            agent: 'commons'\n                        })\n                    }\n                )\n\n                return response.json()\n            } catch (error) {\n                Logger.log('requestFromFaucet', error)\n            }\n        } else {\n            // no account found\n        }\n    }\n\n    public state = {\n        isLogged: false,\n        isLoading: true,\n        isWeb3: false,\n        isNile: false,\n        balance: {\n            eth: 0,\n            ocn: 0\n        },\n        network: '',\n        web3: new Web3(\n            new Web3.providers.HttpProvider(\n                `${nodeScheme}://${nodeHost}:${nodePort}`\n            )\n        ),\n        account: '',\n        ocean: {} as any,\n        startLogin: this.startLogin,\n        requestFromFaucet: this.requestFromFaucet,\n        message: 'Connecting to Ocean...'\n    }\n\n    public async componentDidMount() {\n        this.bootstrap()\n    }\n\n    private startLoginProcess = async () => {\n        try {\n            if (this.state.isWeb3 && window.ethereum) {\n                await window.ethereum.enable()\n                const accounts = await this.state.ocean.accounts.list()\n                if (accounts.length > 0) {\n                    const balance = await accounts[0].getBalance()\n                    this.setState({\n                        isLogged: true,\n                        balance,\n                        account: accounts[0].getId()\n                    })\n                } else {\n                    // not unlocked\n                }\n            } else {\n                // no metamask/mist, show installation guide!\n            }\n        } catch (e) {\n            Logger.log('error logging', e)\n            // error in logging process\n            // show error\n            // rerun bootstrap process?\n        }\n    }\n\n    private bootstrap = async () => {\n        try {\n            if (window.web3) {\n                const web3 = new Web3(window.web3.currentProvider)\n                const { ocean } = await provideOcean(web3)\n                const accounts = await ocean.accounts.list()\n                const network = await ocean.keeper.getNetworkName()\n                const isNile = network === 'Nile'\n                if (accounts.length > 0) {\n                    const balance = await accounts[0].getBalance()\n                    this.setState({\n                        isWeb3: true,\n                        isLogged: true,\n                        isNile,\n                        ocean,\n                        web3,\n                        balance,\n                        network,\n                        account: accounts[0].getId(),\n                        isLoading: false\n                    })\n                } else {\n                    this.setState({\n                        isWeb3: true,\n                        isNile,\n                        ocean,\n                        web3,\n                        network,\n                        isLoading: false\n                    })\n                }\n            } else {\n                const { ocean } = await provideOcean(this.state.web3)\n                const network = await ocean.keeper.getNetworkName()\n                const isNile = network === 'Nile'\n                this.setState({\n                    isNile,\n                    ocean,\n                    network,\n                    isLoading: false\n                })\n            }\n        } catch (e) {\n            // error in bootstrap process\n            // show error connecting to ocean\n            Logger.log('web3 error', e)\n            this.setState({\n                isLoading: false\n            })\n        }\n    }\n\n    public render() {\n        return (\n            <div className={styles.app} >\n    <User.Provider value={this.state}>\n        <Router>\n            <>\n                <Header />\n\n                <main style={{maxWidth: '92rem'}} className={styles.main}>\n                    {this.state.isLoading ? (\n                        <div className={styles.loader}>\n                            <Spinner message={this.state.message} />\n                        </div>\n                    ) : (\n                            <Routes />\n                        )}\n                </main>\n\n                <Footer />\n            </>\n        </Router>\n    </User.Provider>\n            </div >\n        )\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}