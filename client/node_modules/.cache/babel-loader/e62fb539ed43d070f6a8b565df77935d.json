{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\routes\\\\Faucet.tsx\";\nimport React, { PureComponent } from 'react';\nimport Route from '../components/templates/Route';\nimport Button from '../components/atoms/Button';\nimport Spinner from '../components/atoms/Spinner';\nimport { User } from '../context/User';\nimport Web3message from '../components/organisms/Web3message';\nimport styles from './Faucet.module.scss';\n\nvar Faucet =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Faucet, _PureComponent);\n\n  function Faucet() {\n    var _getPrototypeOf2,\n        _this2 = this;\n\n    var _this;\n\n    _classCallCheck(this, Faucet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Faucet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: false,\n      success: undefined,\n      error: undefined\n    };\n\n    _this.getTokens =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(requestFromFaucet) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  isLoading: true\n                });\n\n                _context.prev = 1;\n                _context.next = 4;\n                return requestFromFaucet();\n\n              case 4:\n                response = _context.sent;\n\n                if (!response.error) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _this.setState({\n                  isLoading: false,\n                  error: response.error\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                _this.setState({\n                  isLoading: false,\n                  success: \"Successfully added ETH to your account.\"\n                });\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n\n                _this.setState({\n                  isLoading: false,\n                  error: _context.t0\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.RequestMarkup = function () {\n      return React.createElement(User.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, function (states) {\n        return states.isLogged ? React.createElement(Button, {\n          primary: true,\n          onClick: function onClick() {\n            return _this.getTokens(states.requestFromFaucet);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Request Ether\") : states.isWeb3 ? React.createElement(Web3message, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }) : React.createElement(Web3message, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.ActionMarkup = function () {\n      return React.createElement(\"div\", {\n        className: styles.action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, _this.state.isLoading ? React.createElement(Spinner, {\n        message: \"Getting Ether...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : _this.state.error ? React.createElement(\"div\", {\n        className: styles.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, _this.state.error), React.createElement(Button, {\n        onClick: _this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Try again\")) : _this.state.success ? React.createElement(\"div\", {\n        className: styles.success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, _this.state.success) : React.createElement(_this2.RequestMarkup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"You can only request Ether once every 24 hours for your address.\"));\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        error: undefined,\n        success: undefined,\n        isLoading: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Faucet, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Route, {\n        title: \"Faucet\",\n        description: \"Shower yourself with some Ether for the Ocean POA network.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(User.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, function (states) {\n        return !states.isNile && React.createElement(Web3message, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      }), React.createElement(this.ActionMarkup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Faucet;\n}(PureComponent);\n\nexport { Faucet as default };","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\routes\\Faucet.tsx"],"names":["React","PureComponent","Route","Button","Spinner","User","Web3message","styles","Faucet","state","isLoading","success","undefined","error","getTokens","requestFromFaucet","setState","response","RequestMarkup","states","isLogged","isWeb3","ActionMarkup","action","reset","isNile"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAQqBC,M;;;;;;;;;;;;;;;;;;UACVC,K,GAAQ;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,OAAO,EAAEC,SAFE;AAGXC,MAAAA,KAAK,EAAED;AAHI,K;;UAMPE,S;;;;;+BAAY,iBAAOC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,sBAAKC,QAAL,CAAc;AAAEN,kBAAAA,SAAS,EAAE;AAAb,iBAAd;;AADgB;AAAA;AAAA,uBAIWK,iBAAiB,EAJ5B;;AAAA;AAINE,gBAAAA,QAJM;;AAAA,qBAMRA,QAAQ,CAACJ,KAND;AAAA;AAAA;AAAA;;AAOR,sBAAKG,QAAL,CAAc;AACVN,kBAAAA,SAAS,EAAE,KADD;AAEVG,kBAAAA,KAAK,EAAEI,QAAQ,CAACJ;AAFN,iBAAd;;AAPQ;;AAAA;AAeZ,sBAAKG,QAAL,CAAc;AACVN,kBAAAA,SAAS,EAAE,KADD;AAEVC,kBAAAA,OAAO;AAFG,iBAAd;;AAfY;AAAA;;AAAA;AAAA;AAAA;;AAoBZ,sBAAKK,QAAL,CAAc;AAAEN,kBAAAA,SAAS,EAAE,KAAb;AAAoBG,kBAAAA,KAAK;AAAzB,iBAAd;;AApBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAwBZK,a,GAAgB;AAAA,aACpB,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAAC,MAAM;AAAA,eACHA,MAAM,CAACC,QAAP,GACI,oBAAC,MAAD;AACI,UAAA,OAAO,MADX;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKN,SAAL,CAAeK,MAAM,CAACJ,iBAAtB,CAAN;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,GAOII,MAAM,CAACE,MAAP,GACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,GAGA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXD;AAAA,OADX,CADoB;AAAA,K;;UAmBhBC,Y,GAAe;AAAA,aACnB;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACgB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,MAAKd,KAAL,CAAWC,SAAX,GACG,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAEG,MAAKD,KAAL,CAAWI,KAAX,GACA;AAAK,QAAA,SAAS,EAAEN,MAAM,CAACM,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,MAAKJ,KAAL,CAAWI,KAAf,CADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAKW,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADA,GAKA,MAAKf,KAAL,CAAWE,OAAX,GACA;AAAK,QAAA,SAAS,EAAEJ,MAAM,CAACI,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,MAAKF,KAAL,CAAWE,OAA5C,CADA,GAGA,oBAAC,MAAD,CAAM,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXR,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAdJ,CADmB;AAAA,K;;UAqBfa,K,GAAQ,YAAM;AAClB,YAAKR,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAED,SADG;AAEVD,QAAAA,OAAO,EAAEC,SAFC;AAGVF,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKH,K;;;;;;;6BAEe;AACZ,aACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,WAAW,EAAC,4DAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAAS,MAAM;AAAA,eAAI,CAACA,MAAM,CAACM,MAAR,IAAkB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;AAAA,OADX,CAJJ,EAQI,yBAAM,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ;AAYH;;;;EA5F+BxB,a;;SAAfO,M","sourcesContent":["import React, { PureComponent } from 'react'\nimport Route from '../components/templates/Route'\nimport Button from '../components/atoms/Button'\nimport Spinner from '../components/atoms/Spinner'\nimport { User } from '../context/User'\nimport Web3message from '../components/organisms/Web3message'\nimport styles from './Faucet.module.scss'\n\ninterface FaucetState {\n    isLoading: boolean\n    success?: string\n    error?: string\n}\n\nexport default class Faucet extends PureComponent<{}, FaucetState> {\n    public state = {\n        isLoading: false,\n        success: undefined,\n        error: undefined\n    }\n\n    private getTokens = async (requestFromFaucet: () => any) => {\n        this.setState({ isLoading: true })\n\n        try {\n            const response = await requestFromFaucet()\n\n            if (response.error) {\n                this.setState({\n                    isLoading: false,\n                    error: response.error\n                })\n\n                return\n            }\n\n            this.setState({\n                isLoading: false,\n                success: `Successfully added ETH to your account.`\n            })\n        } catch (error) {\n            this.setState({ isLoading: false, error })\n        }\n    }\n\n    private RequestMarkup = () => (\n        <User.Consumer>\n            {states =>\n                states.isLogged ? (\n                    <Button\n                        primary\n                        onClick={() => this.getTokens(states.requestFromFaucet)}\n                    >\n                        Request Ether\n                    </Button>\n                ) : states.isWeb3 ? (\n                    <Web3message />\n                ) : (\n                    <Web3message />\n                )\n            }\n        </User.Consumer>\n    )\n\n    private ActionMarkup = () => (\n        <div className={styles.action}>\n            {this.state.isLoading ? (\n                <Spinner message=\"Getting Ether...\" />\n            ) : this.state.error ? (\n                <div className={styles.error}>\n                    <p>{this.state.error}</p>\n                    <Button onClick={this.reset}>Try again</Button>\n                </div>\n            ) : this.state.success ? (\n                <div className={styles.success}>{this.state.success}</div>\n            ) : (\n                <this.RequestMarkup />\n            )}\n\n            <p>\n                You can only request Ether once every 24 hours for your address.\n            </p>\n        </div>\n    )\n\n    private reset = () => {\n        this.setState({\n            error: undefined,\n            success: undefined,\n            isLoading: false\n        })\n    }\n\n    public render() {\n        return (\n            <Route\n                title=\"Faucet\"\n                description=\"Shower yourself with some Ether for the Ocean POA network.\"\n            >\n                <User.Consumer>\n                    {states => !states.isNile && <Web3message />}\n                </User.Consumer>\n\n                <this.ActionMarkup />\n            </Route>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}