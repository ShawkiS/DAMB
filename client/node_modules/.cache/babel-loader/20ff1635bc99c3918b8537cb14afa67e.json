{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\components\\\\molecules\\\\AccountStatus\\\\index.tsx\";\nimport React, { PureComponent } from 'react';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport AccountPopover from './Popover';\nimport AccountIndicator from './Indicator';\n\nvar AccountStatus =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AccountStatus, _PureComponent);\n\n  function AccountStatus() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AccountStatus);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccountStatus)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isPopoverOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(AccountStatus, [{\n    key: \"togglePopover\",\n    value: function togglePopover() {\n      this.setState(function (prevState) {\n        return {\n          isPopoverOpen: !prevState.isPopoverOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Manager, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Reference, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, function (_ref) {\n        var ref = _ref.ref;\n        return React.createElement(AccountIndicator, {\n          togglePopover: function togglePopover() {\n            return _this2.togglePopover();\n          },\n          className: _this2.props.className,\n          forwardedRef: ref,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }), this.state.isPopoverOpen && React.createElement(Popper, {\n        placement: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, function (_ref2) {\n        var ref = _ref2.ref,\n            style = _ref2.style,\n            placement = _ref2.placement;\n        return React.createElement(AccountPopover, {\n          forwardedRef: ref,\n          style: style,\n          \"data-placement\": placement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return AccountStatus;\n}(PureComponent);\n\nexport { AccountStatus as default };","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\components\\molecules\\AccountStatus\\index.tsx"],"names":["React","PureComponent","Manager","Reference","Popper","AccountPopover","AccountIndicator","AccountStatus","state","isPopoverOpen","setState","prevState","ref","togglePopover","props","className","style","placement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,cAA3C;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,gBAAP,MAA6B,aAA7B;;IAUqBC,a;;;;;;;;;;;;;;;;;UAIVC,K,GAAQ;AACXC,MAAAA,aAAa,EAAE;AADJ,K;;;;;;oCAIQ;AACnB,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACxBF,UAAAA,aAAa,EAAE,CAACE,SAAS,CAACF;AADF,SAAL;AAAA,OAAvB;AAGH;;;6BAEe;AAAA;;AACZ,aACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA,YAAGG,GAAH,QAAGA,GAAH;AAAA,eACG,oBAAC,gBAAD;AACI,UAAA,aAAa,EAAE;AAAA,mBAAM,MAAI,CAACC,aAAL,EAAN;AAAA,WADnB;AAEI,UAAA,SAAS,EAAE,MAAI,CAACC,KAAL,CAAWC,SAF1B;AAGI,UAAA,YAAY,EAAEH,GAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAAA,OADL,CADJ,EAUK,KAAKJ,KAAL,CAAWC,aAAX,IACG,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA,YAAGG,GAAH,SAAGA,GAAH;AAAA,YAAQI,KAAR,SAAQA,KAAR;AAAA,YAAeC,SAAf,SAAeA,SAAf;AAAA,eACG,oBAAC,cAAD;AACI,UAAA,YAAY,EAAEL,GADlB;AAEI,UAAA,KAAK,EAAEI,KAFX;AAGI,4BAAgBC,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAAA,OADL,CAXR,CADJ;AAwBH;;;;EAvCsChB,a;;SAAtBM,a","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Manager, Reference, Popper } from 'react-popper'\nimport AccountPopover from './Popover'\nimport AccountIndicator from './Indicator'\n\ninterface AccountStatusProps {\n    className?: string\n}\n\ninterface AccountStatusState {\n    isPopoverOpen: boolean\n}\n\nexport default class AccountStatus extends PureComponent<\n    AccountStatusProps,\n    AccountStatusState\n> {\n    public state = {\n        isPopoverOpen: false\n    }\n\n    public togglePopover() {\n        this.setState(prevState => ({\n            isPopoverOpen: !prevState.isPopoverOpen\n        }))\n    }\n\n    public render() {\n        return (\n            <Manager>\n                <Reference>\n                    {({ ref }) => (\n                        <AccountIndicator\n                            togglePopover={() => this.togglePopover()}\n                            className={this.props.className}\n                            forwardedRef={ref}\n                        />\n                    )}\n                </Reference>\n                {this.state.isPopoverOpen && (\n                    <Popper placement=\"auto\">\n                        {({ ref, style, placement }) => (\n                            <AccountPopover\n                                forwardedRef={ref}\n                                style={style}\n                                data-placement={placement}\n                            />\n                        )}\n                    </Popper>\n                )}\n            </Manager>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}