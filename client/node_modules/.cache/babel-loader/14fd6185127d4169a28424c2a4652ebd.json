{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\routes\\\\Details\\\\AssetFile.tsx\";\nimport React, { PureComponent } from 'react';\nimport { Logger } from '@oceanprotocol/squid';\nimport filesize from 'filesize';\nimport Button from '../../components/atoms/Button';\nimport Spinner from '../../components/atoms/Spinner';\nimport { User } from '../../context/User';\nimport styles from './AssetFile.module.scss';\nimport ReactGA from 'react-ga';\n\nvar AssetFile =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AssetFile, _PureComponent);\n\n  function AssetFile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssetFile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssetFile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: false,\n      error: '',\n      message: 'Decrypting file, please sign...'\n    };\n\n    _this.resetState = function () {\n      return _this.setState({\n        isLoading: true,\n        error: ''\n      });\n    };\n\n    _this.purchaseAsset =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ddo, index) {\n        var ocean, accounts, service, agreementId, path;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.resetState();\n\n                ReactGA.event({\n                  category: 'Purchase',\n                  action: 'purchaseAsset-start ' + ddo.id\n                });\n                ocean = _this.context.ocean;\n                _context.prev = 3;\n                _context.next = 6;\n                return ocean.accounts.list();\n\n              case 6:\n                accounts = _context.sent;\n                service = ddo.findServiceByType('Access');\n                _context.next = 10;\n                return ocean.assets.order(ddo.id, service.serviceDefinitionId, accounts[0]);\n\n              case 10:\n                agreementId = _context.sent;\n                _context.next = 13;\n                return ocean.assets.consume(agreementId, ddo.id, service.serviceDefinitionId, accounts[0], '', index);\n\n              case 13:\n                path = _context.sent;\n                Logger.log('path', path);\n                ReactGA.event({\n                  category: 'Purchase',\n                  action: 'purchaseAsset-end ' + ddo.id\n                });\n\n                _this.setState({\n                  isLoading: false\n                });\n\n                _context.next = 24;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](3);\n                Logger.log('error', _context.t0);\n\n                _this.setState({\n                  isLoading: false,\n                  error: _context.t0.message\n                });\n\n                ReactGA.event({\n                  category: 'Purchase',\n                  action: 'purchaseAsset-error ' + _context.t0.message\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 19]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(AssetFile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          ddo = _this$props.ddo,\n          file = _this$props.file;\n      return React.createElement(\"div\", {\n        className: styles.fileWrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        key: file.index,\n        className: styles.file,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, file.contentType && file.contentType.split('/')[1]), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, file.contentLength && filesize(file.contentLength))), this.state.isLoading ? React.createElement(Spinner, {\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }) : React.createElement(User.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, function (states) {\n        return states.isLogged ? React.createElement(Button, {\n          primary: true,\n          className: styles.buttonMain,\n          onClick: function onClick() {\n            return _this2.purchaseAsset(ddo, file.index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Get file\") : states.isWeb3 && React.createElement(Button, {\n          primary: true,\n          className: styles.buttonMain,\n          onClick: states.startLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Get file\");\n      }), this.state.error !== '' && React.createElement(\"div\", {\n        className: styles.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.error));\n    }\n  }]);\n\n  return AssetFile;\n}(PureComponent);\n\nexport { AssetFile as default };\nAssetFile.contextType = User;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\routes\\Details\\AssetFile.tsx"],"names":["React","PureComponent","Logger","filesize","Button","Spinner","User","styles","ReactGA","AssetFile","state","isLoading","error","message","resetState","setState","purchaseAsset","ddo","index","event","category","action","id","ocean","context","accounts","list","service","findServiceByType","assets","order","serviceDefinitionId","agreementId","consume","path","log","props","file","fileWrap","contentType","split","contentLength","states","isLogged","buttonMain","isWeb3","startLogin","contextType"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Logger } from '@oceanprotocol/squid'\nimport filesize from 'filesize'\nimport Button from '../../components/atoms/Button'\nimport Spinner from '../../components/atoms/Spinner'\nimport { User } from '../../context/User'\nimport styles from './AssetFile.module.scss'\nimport ReactGA from 'react-ga'\n\ninterface AssetFileProps {\n    file: any\n    ddo: any\n}\n\ninterface AssetFileState {\n    isLoading: boolean\n    error: string\n    message: string\n}\n\nexport default class AssetFile extends PureComponent<\n    AssetFileProps,\n    AssetFileState\n> {\n    public state = {\n        isLoading: false,\n        error: '',\n        message: 'Decrypting file, please sign...'\n    }\n\n    private resetState = () => this.setState({ isLoading: true, error: '' })\n\n    private purchaseAsset = async (ddo: any, index: number) => {\n        this.resetState()\n\n        ReactGA.event({\n            category: 'Purchase',\n            action: 'purchaseAsset-start ' + ddo.id\n        })\n\n        const { ocean } = this.context\n        \n        try {\n            const accounts = await ocean.accounts.list()\n            const service = ddo.findServiceByType('Access')\n            const agreementId = await ocean.assets.order(\n                ddo.id,\n                service.serviceDefinitionId,\n                accounts[0]\n            )\n\n            const path = await ocean.assets.consume(\n                agreementId,\n                ddo.id,\n                service.serviceDefinitionId,\n                accounts[0],\n                '',\n                index\n            )\n            Logger.log('path', path)\n            ReactGA.event({\n                category: 'Purchase',\n                action: 'purchaseAsset-end ' + ddo.id\n            })\n            this.setState({ isLoading: false })\n        } catch (error) {\n            Logger.log('error', error)\n            this.setState({ isLoading: false, error: error.message })\n            ReactGA.event({\n                category: 'Purchase',\n                action: 'purchaseAsset-error ' + error.message\n            })\n        }\n    }\n\n    public render() {\n        const { ddo, file } = this.props\n\n        return (\n            <div className={styles.fileWrap}>\n                <ul key={file.index} className={styles.file}>\n                    <li>\n                        {file.contentType && file.contentType.split('/')[1]}\n                    </li>\n                    <li>\n                        {file.contentLength && filesize(file.contentLength)}\n                    </li>\n                    {/* <li>{file.encoding}</li> */}\n                    {/* <li>{file.compression}</li> */}\n                </ul>\n\n                {this.state.isLoading ? (\n                    <Spinner message={this.state.message} />\n                ) : (\n                    <User.Consumer>\n                        {states =>\n                            states.isLogged ? (\n                                <Button\n                                    primary\n                                    className={styles.buttonMain}\n                                    onClick={() =>\n                                        this.purchaseAsset(ddo, file.index)\n                                    }\n                                >\n                                    Get file\n                                </Button>\n                            ) : (\n                                states.isWeb3 && (\n                                    <Button\n                                        primary\n                                        className={styles.buttonMain}\n                                        onClick={states.startLogin}\n                                    >\n                                        Get file\n                                    </Button>\n                                )\n                            )\n                        }\n                    </User.Consumer>\n                )}\n\n                {this.state.error !== '' && (\n                    <div className={styles.error}>{this.state.error}</div>\n                )}\n            </div>\n        )\n    }\n}\n\nAssetFile.contextType = User\n"]},"metadata":{},"sourceType":"module"}