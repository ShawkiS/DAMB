{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\components\\\\organisms\\\\Add.tsx\";\nimport React, { useState, useEffect, Component } from 'react';\nimport useIpfsApi from '../../hooks/use-ipfs-api';\nimport { site } from '../../site.config';\nimport Dropzone from '../atoms/Dropzone';\nimport styles from './Add.module.css';\nimport Spinner from '../atoms/Spinner';\nimport Button from '../atoms/Button';\nimport Input from '../atoms/Form/Input';\n\nvar _ref = new URL(site.ipfsNodeUri),\n    hostname = _ref.hostname,\n    port = _ref.port,\n    protocol = _ref.protocol;\n\nvar ipfsConfig = {\n  protocol: protocol.replace(':', ''),\n  host: hostname,\n  port: port || '443'\n};\n\nvar Add =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Add, _Component);\n\n  // const [fileSizeReceived] = \n\n  /**\r\n   *\r\n   */\n  function Add() {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Add).call(this, {}));\n    _this.ipfs = useIpfsApi(ipfsConfig).ipfs;\n    _this.isIpfsReady = useIpfsApi(ipfsConfig).isIpfsReady;\n    _this.ipfsError = useIpfsApi(ipfsConfig).ipfsError;\n    _this.fileHash = useState()[0];\n    _this.setFileHash = useState()[1];\n    _this.loading = useState(false)[0];\n    _this.setLoading = useState(false)[1];\n    _this.message = useState()[0];\n    _this.setMessage = useState()[1];\n    _this.error = useState()[0];\n    _this.setError = useState()[1];\n    _this.fileSize = useState()[0];\n    _this.setFileSize = useState()[1];\n    _this.fileSizeReceived = useState('')[0];\n    useEffect(function () {//  this.setMessage(`Adding to IPFS<br />  <small>${this.fileSizeReceived || 0}/${this.fileSize}</small><br />`)\n    }, [_this.fileSize, _this.fileSizeReceived]);\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"handleOnDrop\",\n    value: function () {\n      var _handleOnDrop = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(acceptedFiles) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (acceptedFiles[0]) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.setLoading(true); //const totalSize = formatBytes(acceptedFiles[0].size, 0)\n                //this.setFileSize(totalSize)\n\n                _context.prev = 3;\n                //const cid = await addToIpfs(acceptedFiles, this.ipfs)\n                //if (!cid) return\n                //this.setFileHash(cid)\n                this.setLoading(false);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](3);\n                return _context.abrupt(\"return\", null);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 7]]);\n      }));\n\n      function handleOnDrop(_x) {\n        return _handleOnDrop.apply(this, arguments);\n      }\n\n      return handleOnDrop;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: styles.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.topDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Input, {\n        key: 'Name',\n        name: 'Name',\n        label: 'Asset Name',\n        placeholder: 'Enter The Name Of Your Asset',\n        required: true,\n        type: 'text',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.topDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Input, {\n        key: 'Description',\n        name: 'Description',\n        label: 'Asset Description',\n        placeholder: 'Enter The Description Of Your Asset',\n        required: true,\n        type: 'text area',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.lastInputDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Input, {\n        key: 'price',\n        name: 'price',\n        label: 'Asset price',\n        placeholder: 'Enter The Price Of Your Asset',\n        required: true,\n        type: 'number',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), this.loading ? React.createElement(Spinner, {\n        message: this.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }) : this.fileHash ? React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"\".concat(site.ipfsGateway, \"/ipfs/\").concat(this.fileHash),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"ipfs:\", this.fileHash) : React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        multiple: false,\n        handleOnDrop: this.handleOnDrop,\n        disabled: !this.isIpfsReady,\n        error: this.error || this.ipfsError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          marginTop: '2rem'\n        },\n        className: styles.buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Publish Data\")));\n    }\n  }]);\n\n  return Add;\n}(Component);\n\nexport { Add as default };","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\components\\organisms\\Add.tsx"],"names":["React","useState","useEffect","Component","useIpfsApi","site","Dropzone","styles","Spinner","Button","Input","URL","ipfsNodeUri","hostname","port","protocol","ipfsConfig","replace","host","Add","ipfs","isIpfsReady","ipfsError","fileHash","setFileHash","loading","setLoading","message","setMessage","error","setError","fileSize","setFileSize","fileSizeReceived","acceptedFiles","add","topDiv","lastInputDiv","ipfsGateway","width","handleOnDrop","marginTop","buttons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\r\nimport useIpfsApi, { IpfsConfig } from '../../hooks/use-ipfs-api'\r\nimport { formatBytes, addToIpfs } from '../../utils'\r\nimport { site } from '../../site.config'\r\nimport Dropzone from '../atoms/Dropzone'\r\nimport styles from './Add.module.css'\r\nimport Spinner from '../atoms/Spinner'\r\nimport Button from '../atoms/Button'\r\nimport Input from '../atoms/Form/Input'\r\n\r\nconst { hostname, port, protocol } = new URL(site.ipfsNodeUri)\r\n\r\nconst ipfsConfig: IpfsConfig = {\r\n  protocol: protocol.replace(':', ''),\r\n  host: hostname,\r\n  port: port || '443'\r\n}\r\n\r\nexport default class Add extends Component{\r\n  \r\n  // const [fileSizeReceived] = \r\n\r\n  ipfs = useIpfsApi(ipfsConfig).ipfs;\r\n  isIpfsReady = useIpfsApi(ipfsConfig).isIpfsReady;\r\n  ipfsError = useIpfsApi(ipfsConfig).ipfsError;\r\n  fileHash = useState()[0];\r\n  setFileHash = useState()[1];\r\n  loading = useState(false)[0];\r\n  setLoading = useState(false)[1];\r\n  message = useState()[0];\r\n  setMessage = useState()[1];\r\n  error = useState()[0];\r\n  setError = useState()[1];\r\n  fileSize = useState()[0];\r\n  setFileSize = useState()[1];\r\n  fileSizeReceived = useState('')[0];\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n    super({});  \r\n    useEffect(() => {\r\n    //  this.setMessage(`Adding to IPFS<br />  <small>${this.fileSizeReceived || 0}/${this.fileSize}</small><br />`)\r\n    }, [this.fileSize, this.fileSizeReceived])\r\n  }\r\n\r\n \r\n\r\n   async handleOnDrop(acceptedFiles: File[]) {\r\n    if (!acceptedFiles[0]) return\r\n\r\n    this.setLoading(true)\r\n    \r\n\r\n    //const totalSize = formatBytes(acceptedFiles[0].size, 0)\r\n    //this.setFileSize(totalSize)\r\n\r\n    try {\r\n      //const cid = await addToIpfs(acceptedFiles, this.ipfs)\r\n      //if (!cid) return\r\n      //this.setFileHash(cid)\r\n      this.setLoading(false)\r\n    } catch (error) {\r\n      //this.setError(`Adding to IPFS failed: ${error.message}`)\r\n      return null\r\n    }\r\n  }\r\n render(){\r\n  return (\r\n    <div className={styles.add}>\r\n\r\n      <div className={styles.topDiv}>\r\n        <Input\r\n          key={'Name'}\r\n          name={'Name'}\r\n          label={'Asset Name'}\r\n          placeholder={'Enter The Name Of Your Asset'}\r\n          required={true}\r\n          type={'text'}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.topDiv}>\r\n        <Input\r\n          key={'Description'}\r\n          name={'Description'}\r\n          label={'Asset Description'}\r\n          placeholder={'Enter The Description Of Your Asset'}\r\n          required={true}\r\n          type={'text area'}\r\n        />\r\n      </div>\r\n\r\n\r\n      <div className={styles.lastInputDiv}>\r\n        <Input\r\n          key={'price'}\r\n          name={'price'}\r\n          label={'Asset price'}\r\n          placeholder={'Enter The Price Of Your Asset'}\r\n          required={true}\r\n          type={'number'}\r\n        />\r\n      </div>\r\n\r\n      {this.loading ? (\r\n        <Spinner message={this.message} />\r\n      ) : this.fileHash ? (\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={`${site.ipfsGateway}/ipfs/${this.fileHash}`}\r\n        >\r\n          ipfs:{this.fileHash}\r\n        </a>\r\n      ) : (\r\n            <div style={{ width: '100%' }}>\r\n              <Dropzone\r\n\r\n                multiple={false}\r\n                handleOnDrop={this.handleOnDrop}\r\n                disabled={!this.isIpfsReady}\r\n                error={this.error || this.ipfsError}\r\n              />\r\n            </div>\r\n          )}\r\n      <div style={{ marginTop: '2rem' }} className={styles.buttons}>\r\n        <Button primary>Publish Data</Button>\r\n      </div>\r\n    </div>)\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}