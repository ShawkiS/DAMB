{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\routes\\\\Details\\\\AssetDetails.tsx\";\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport Markdown from '../../components/atoms/Markdown';\nimport styles from './AssetDetails.module.scss';\nimport AssetFilesDetails from './AssetFilesDetails';\n\nvar AssetDetails =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AssetDetails, _PureComponent);\n\n  function AssetDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssetDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssetDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.datafilesLine = function (files) {\n      if (files.length === 1) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, files.length, \" data file\");\n      }\n\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, files.length, \" data files\");\n    };\n\n    return _this;\n  }\n\n  _createClass(AssetDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          metadata = _this$props.metadata,\n          ddo = _this$props.ddo;\n      var base = metadata.base;\n      return React.createElement(React.Fragment, null, React.createElement(\"aside\", {\n        className: styles.metaPrimary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: styles.copyrightHolder,\n        title: \"Copyright Holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, base.copyrightHolder), React.createElement(\"div\", {\n        className: styles.metaPrimaryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        title: \"Date created, published on \".concat(base.datePublished),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        date: base.dateCreated,\n        format: \"L\",\n        interval: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), base.categories && // TODO: Make this link to search for respective category\n      React.createElement(Link, {\n        to: \"/search?text=\".concat(base.categories[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, base.categories[0]), base.files && this.datafilesLine(base.files))), React.createElement(Markdown, {\n        text: base.description,\n        className: styles.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: styles.meta,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.metaLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Author\")), React.createElement(\"span\", {\n        className: styles.metaValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, base.author)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.metaLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"License\")), React.createElement(\"span\", {\n        className: styles.metaValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, base.license)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.metaLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"DID\")), React.createElement(\"span\", {\n        className: styles.metaValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, ddo.id)))), React.createElement(AssetFilesDetails, {\n        files: base.files ? base.files : [],\n        ddo: ddo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AssetDetails;\n}(PureComponent);\n\nexport { AssetDetails as default };","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\routes\\Details\\AssetDetails.tsx"],"names":["React","PureComponent","Link","Moment","Markdown","styles","AssetFilesDetails","AssetDetails","datafilesLine","files","length","props","metadata","ddo","base","metaPrimary","copyrightHolder","metaPrimaryData","datePublished","dateCreated","categories","description","meta","metaLabel","metaValue","author","license","id"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport Markdown from '../../components/atoms/Markdown'\nimport styles from './AssetDetails.module.scss'\nimport AssetFilesDetails from './AssetFilesDetails'\n\ninterface AssetDetailsProps {\n    metadata: any\n    ddo: any\n}\n\nexport default class AssetDetails extends PureComponent<AssetDetailsProps> {\n    private datafilesLine = (files: any) => {\n        if (files.length === 1) {\n            return <span>{files.length} data file</span>\n        }\n        return <span>{files.length} data files</span>\n    }\n\n    public render() {\n        const { metadata, ddo } = this.props\n        const { base } = metadata\n\n        return (\n            <>\n                <aside className={styles.metaPrimary}>\n                    <h2\n                        className={styles.copyrightHolder}\n                        title=\"Copyright Holder\"\n                    >\n                        {base.copyrightHolder}\n                    </h2>\n                    <div className={styles.metaPrimaryData}>\n                        <span\n                            title={`Date created, published on ${\n                                base.datePublished\n                            }`}\n                        >\n                            <Moment\n                                date={base.dateCreated}\n                                format=\"L\"\n                                interval={0}\n                            />\n                        </span>\n\n                        {base.categories && (\n                            // TODO: Make this link to search for respective category\n                            <Link to={`/search?text=${base.categories[0]}`}>\n                                {base.categories[0]}\n                            </Link>\n                        )}\n\n                        {base.files && this.datafilesLine(base.files)}\n                    </div>\n                </aside>\n\n                <Markdown\n                    text={base.description}\n                    className={styles.description}\n                />\n\n                <ul className={styles.meta}>\n                    <li>\n                        <span className={styles.metaLabel}>\n                            <strong>Author</strong>\n                        </span>\n                        <span className={styles.metaValue}>{base.author}</span>\n                    </li>\n                    <li>\n                        <span className={styles.metaLabel}>\n                            <strong>License</strong>\n                        </span>\n                        <span className={styles.metaValue}>{base.license}</span>\n                    </li>\n                    <li>\n                        <span className={styles.metaLabel}>\n                            <strong>DID</strong>\n                        </span>\n                        <span className={styles.metaValue}>\n                            <code>{ddo.id}</code>\n                        </span>\n                    </li>\n                </ul>\n\n                <AssetFilesDetails\n                    files={base.files ? base.files : []}\n                    ddo={ddo}\n                />\n\n                {/* <pre>\n                    <code>{JSON.stringify(metadata, null, 2)}</code>\n                </pre> */}\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}