{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\routes\\\\Publish\\\\index.tsx\";\nimport React, { Component } from 'react';\nimport { Logger } from '@oceanprotocol/squid';\nimport Route from '../../components/templates/Route';\nimport Form from '../../components/atoms/Form/Form';\nimport AssetModel from '../../models/AssetModel';\nimport { User } from '../../context/User';\nimport Step from './Step';\nimport Progress from './Progress';\nimport ReactGA from 'react-ga';\nimport { steps } from '../../data/form-publish.json';\n\nvar Publish =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Publish, _Component);\n\n  function Publish() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Publish);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Publish)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentStep: 1,\n      name: '',\n      dateCreated: new Date().toISOString(),\n      description: '',\n      files: [],\n      price: 0,\n      author: '',\n      type: 'dataset',\n      license: '',\n      copyrightHolder: '',\n      categories: '',\n      isPublishing: false,\n      isPublished: false,\n      publishedDid: '',\n      publishingError: '',\n      validationStatus: {\n        1: {\n          name: false,\n          files: false,\n          allFieldsValid: false\n        },\n        2: {\n          description: false,\n          categories: false,\n          allFieldsValid: false\n        },\n        3: {\n          author: false,\n          copyrightHolder: false,\n          license: false,\n          allFieldsValid: false\n        }\n      }\n    };\n\n    _this.inputChange = function (event) {\n      _this.validateInputs(event.currentTarget.name, event.currentTarget.value);\n\n      _this.setState(_defineProperty({}, event.currentTarget.name, event.currentTarget.value));\n    };\n\n    _this.inputToArrayChange = function (event) {\n      _this.validateInputs(event.currentTarget.name, event.currentTarget.value);\n\n      _this.setState(_defineProperty({}, event.currentTarget.name, [event.currentTarget.value]));\n    };\n\n    _this.next = function () {\n      var currentStep = _this.state.currentStep;\n      var totalSteps = steps.length;\n      currentStep = currentStep >= totalSteps - 1 ? totalSteps : currentStep + 1;\n      ReactGA.event({\n        category: 'Publish',\n        action: 'nextStep ' + currentStep\n      });\n\n      _this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    _this.prev = function () {\n      var currentStep = _this.state.currentStep;\n      currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n\n      _this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    _this.tryAgain = function () {\n      _this.setState({\n        publishingError: ''\n      });\n    };\n\n    _this.toStart = function () {\n      _this.setState({\n        name: '',\n        dateCreated: new Date().toISOString(),\n        description: '',\n        files: [],\n        price: 0,\n        author: '',\n        type: 'dataset',\n        license: '',\n        copyrightHolder: '',\n        categories: '',\n        isPublishing: false,\n        isPublished: false,\n        currentStep: 1\n      });\n    };\n\n    _this.validateInputs = function (name, value) {\n      var hasContent = value.length > 0; // Setting state for all fields\n\n      if (hasContent) {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, _defineProperty({}, _this.state.currentStep, _objectSpread({}, prevState.validationStatus[_this.state.currentStep], _defineProperty({}, name, true))))\n          };\n        }, _this.runValidation);\n      } else {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, _defineProperty({}, _this.state.currentStep, _objectSpread({}, prevState.validationStatus[_this.state.currentStep], _defineProperty({}, name, false))))\n          };\n        }, _this.runValidation);\n      }\n    };\n\n    _this.runValidation = function () {\n      var validationStatus = _this.state.validationStatus; //\n      // Step 1\n      //\n\n      if (validationStatus[1].name && validationStatus[1].files) {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, {\n              1: _objectSpread({}, prevState.validationStatus[1], {\n                allFieldsValid: true\n              })\n            })\n          };\n        });\n      } else {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, {\n              1: _objectSpread({}, prevState.validationStatus[1], {\n                allFieldsValid: false\n              })\n            })\n          };\n        });\n      } //\n      // Step 2\n      //\n\n\n      if (validationStatus[2].description && validationStatus[2].categories) {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, {\n              2: _objectSpread({}, prevState.validationStatus[2], {\n                allFieldsValid: true\n              })\n            })\n          };\n        });\n      } else {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, {\n              2: _objectSpread({}, prevState.validationStatus[2], {\n                allFieldsValid: false\n              })\n            })\n          };\n        });\n      } //\n      // Step 3\n      //\n\n\n      if (validationStatus[3].author && validationStatus[3].copyrightHolder && validationStatus[3].license) {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, {\n              3: _objectSpread({}, prevState.validationStatus[3], {\n                allFieldsValid: true\n              })\n            })\n          };\n        });\n      } else {\n        _this.setState(function (prevState) {\n          return {\n            validationStatus: _objectSpread({}, prevState.validationStatus, {\n              3: _objectSpread({}, prevState.validationStatus[3], {\n                allFieldsValid: false\n              })\n            })\n          };\n        });\n      }\n    };\n\n    _this.registerAsset =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var ocean, account, newAsset, asset;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                ReactGA.event({\n                  category: 'Publish',\n                  action: 'registerAsset-start'\n                });\n\n                _this.setState({\n                  publishingError: '',\n                  isPublishing: true\n                });\n\n                ocean = _this.context.ocean;\n                _context.next = 6;\n                return ocean.accounts.list();\n\n              case 6:\n                account = _context.sent;\n                newAsset = {\n                  // OEP-08 Attributes\n                  // https://github.com/oceanprotocol/OEPs/tree/master/8\n                  base: Object.assign(AssetModel.base, {\n                    name: _this.state.name,\n                    description: _this.state.description,\n                    dateCreated: new Date(_this.state.dateCreated).toISOString(),\n                    author: _this.state.author,\n                    license: _this.state.license,\n                    copyrightHolder: _this.state.copyrightHolder,\n                    files: _this.state.files,\n                    price: _this.state.price,\n                    type: _this.state.type,\n                    categories: [_this.state.categories],\n                    workExample: undefined,\n                    inLanguage: undefined,\n                    tags: ''\n                  }),\n                  curation: Object.assign(AssetModel.curation),\n                  additionalInformation: Object.assign(AssetModel.additionalInformation)\n                };\n                _context.prev = 8;\n                _context.next = 11;\n                return _this.context.ocean.assets.create(newAsset, account[0]);\n\n              case 11:\n                asset = _context.sent;\n\n                _this.setState({\n                  publishedDid: asset.id,\n                  isPublished: true\n                });\n\n                ReactGA.event({\n                  category: 'Publish',\n                  action: 'registerAsset-end' + asset.id\n                });\n                _context.next = 21;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](8);\n                // make readable errors\n                Logger.log('error:', _context.t0);\n\n                _this.setState({\n                  publishingError: _context.t0.message\n                });\n\n                ReactGA.event({\n                  category: 'Publish',\n                  action: 'registerAsset-error' + _context.t0.message\n                });\n\n              case 21:\n                _this.setState({\n                  isPublishing: false\n                });\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[8, 16]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Publish, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Route, {\n        title: \"Publish\",\n        description: \"Publish a new data set into the Ocean Protocol Network.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        steps: steps,\n        currentStep: this.state.currentStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(Form, {\n        onSubmit: this.registerAsset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, steps.map(function (step, index) {\n        return React.createElement(Step, {\n          key: index,\n          index: index,\n          title: step.title,\n          description: step.description,\n          currentStep: _this2.state.currentStep,\n          fields: step.fields,\n          inputChange: _this2.inputChange,\n          inputToArrayChange: _this2.inputToArrayChange,\n          state: _this2.state,\n          next: _this2.next,\n          prev: _this2.prev,\n          totalSteps: steps.length,\n          tryAgain: _this2.tryAgain,\n          toStart: _this2.toStart,\n          content: step.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Publish;\n}(Component);\n\nPublish.contextType = User;\nexport default Publish;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\routes\\Publish\\index.tsx"],"names":["React","Component","Logger","Route","Form","AssetModel","User","Step","Progress","ReactGA","steps","Publish","state","currentStep","name","dateCreated","Date","toISOString","description","files","price","author","type","license","copyrightHolder","categories","isPublishing","isPublished","publishedDid","publishingError","validationStatus","allFieldsValid","inputChange","event","validateInputs","currentTarget","value","setState","inputToArrayChange","next","totalSteps","length","category","action","prev","tryAgain","toStart","hasContent","prevState","runValidation","registerAsset","preventDefault","ocean","context","accounts","list","account","newAsset","base","Object","assign","workExample","undefined","inLanguage","tags","curation","additionalInformation","assets","create","asset","id","log","message","map","step","index","title","fields","content","contextType"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Component, FormEvent } from 'react'\nimport { Logger } from '@oceanprotocol/squid'\nimport Route from '../../components/templates/Route'\nimport Form from '../../components/atoms/Form/Form'\nimport AssetModel from '../../models/AssetModel'\nimport { User } from '../../context/User'\nimport Step from './Step'\nimport Progress from './Progress'\nimport ReactGA from 'react-ga'\n\nimport { steps } from '../../data/form-publish.json'\n\ntype AssetType = 'dataset' | 'algorithm' | 'container' | 'workflow' | 'other'\n\ninterface PublishState {\n    name?: string\n    dateCreated?: string\n    description?: string\n    files?: string[]\n    price?: number\n    author?: string\n    type?: AssetType\n    license?: string\n    copyrightHolder?: string\n    categories?: string\n    tags?: string[]\n    isPublishing?: boolean\n    isPublished?: boolean\n    publishedDid?: string\n    publishingError?: string\n    currentStep?: number\n    validationStatus?: any\n}\n\nclass Publish extends Component<{}, PublishState> {\n    public state = {\n        currentStep: 1,\n        name: '',\n        dateCreated: new Date().toISOString(),\n        description: '',\n        files: [],\n        price: 0,\n        author: '',\n        type: 'dataset' as AssetType,\n        license: '',\n        copyrightHolder: '',\n        categories: '',\n        isPublishing: false,\n        isPublished: false,\n        publishedDid: '',\n        publishingError: '',\n        validationStatus: {\n            1: { name: false, files: false, allFieldsValid: false },\n            2: {\n                description: false,\n                categories: false,\n                allFieldsValid: false\n            },\n            3: {\n                author: false,\n                copyrightHolder: false,\n                license: false,\n                allFieldsValid: false\n            }\n        }\n    }\n\n    private inputChange = (\n        event: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>\n    ) => {\n        this.validateInputs(event.currentTarget.name, event.currentTarget.value)\n\n        this.setState({\n            [event.currentTarget.name]: event.currentTarget.value\n        })\n    }\n\n    private inputToArrayChange = (\n        event: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>\n    ) => {\n        this.validateInputs(event.currentTarget.name, event.currentTarget.value)\n\n        this.setState({\n            [event.currentTarget.name]: [event.currentTarget.value]\n        })\n    }\n\n    private next = () => {\n        let { currentStep } = this.state\n        const totalSteps = steps.length\n\n        currentStep =\n            currentStep >= totalSteps - 1 ? totalSteps : currentStep + 1\n\n        ReactGA.event({\n            category: 'Publish',\n            action: 'nextStep ' + currentStep\n        })\n\n        this.setState({ currentStep })\n    }\n\n    private prev = () => {\n        let { currentStep } = this.state\n        currentStep = currentStep <= 1 ? 1 : currentStep - 1\n        this.setState({ currentStep })\n    }\n\n    private tryAgain = () => {\n        this.setState({ publishingError: '' })\n    }\n\n    private toStart = () => {\n        this.setState({\n            name: '',\n            dateCreated: new Date().toISOString(),\n            description: '',\n            files: [],\n            price: 0,\n            author: '',\n            type: 'dataset' as AssetType,\n            license: '',\n            copyrightHolder: '',\n            categories: '',\n            isPublishing: false,\n            isPublished: false,\n            currentStep: 1\n        })\n    }\n\n    private validateInputs = (name: string, value: string) => {\n        let hasContent = value.length > 0\n\n        // Setting state for all fields\n        if (hasContent) {\n            this.setState(\n                prevState => ({\n                    validationStatus: {\n                        ...prevState.validationStatus,\n                        [this.state.currentStep]: {\n                            ...prevState.validationStatus[\n                                this.state.currentStep\n                            ],\n                            [name]: true\n                        }\n                    }\n                }),\n                this.runValidation\n            )\n        } else {\n            this.setState(\n                prevState => ({\n                    validationStatus: {\n                        ...prevState.validationStatus,\n                        [this.state.currentStep]: {\n                            ...prevState.validationStatus[\n                                this.state.currentStep\n                            ],\n                            [name]: false\n                        }\n                    }\n                }),\n                this.runValidation\n            )\n        }\n    }\n\n    private runValidation = () => {\n        let { validationStatus } = this.state\n        //\n        // Step 1\n        //\n        if (validationStatus[1].name && validationStatus[1].files) {\n            this.setState(prevState => ({\n                validationStatus: {\n                    ...prevState.validationStatus,\n                    1: {\n                        ...prevState.validationStatus[1],\n                        allFieldsValid: true\n                    }\n                }\n            }))\n        } else {\n            this.setState(prevState => ({\n                validationStatus: {\n                    ...prevState.validationStatus,\n                    1: {\n                        ...prevState.validationStatus[1],\n                        allFieldsValid: false\n                    }\n                }\n            }))\n        }\n\n        //\n        // Step 2\n        //\n        if (validationStatus[2].description && validationStatus[2].categories) {\n            this.setState(prevState => ({\n                validationStatus: {\n                    ...prevState.validationStatus,\n                    2: {\n                        ...prevState.validationStatus[2],\n                        allFieldsValid: true\n                    }\n                }\n            }))\n        } else {\n            this.setState(prevState => ({\n                validationStatus: {\n                    ...prevState.validationStatus,\n                    2: {\n                        ...prevState.validationStatus[2],\n                        allFieldsValid: false\n                    }\n                }\n            }))\n        }\n\n        //\n        // Step 3\n        //\n        if (\n            validationStatus[3].author &&\n            validationStatus[3].copyrightHolder &&\n            validationStatus[3].license\n        ) {\n            this.setState(prevState => ({\n                validationStatus: {\n                    ...prevState.validationStatus,\n                    3: {\n                        ...prevState.validationStatus[3],\n                        allFieldsValid: true\n                    }\n                }\n            }))\n        } else {\n            this.setState(prevState => ({\n                validationStatus: {\n                    ...prevState.validationStatus,\n                    3: {\n                        ...prevState.validationStatus[3],\n                        allFieldsValid: false\n                    }\n                }\n            }))\n        }\n    }\n\n    private registerAsset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        ReactGA.event({\n            category: 'Publish',\n            action: 'registerAsset-start'\n        });\n        this.setState({\n            publishingError: '',\n            isPublishing: true\n        })\n        const { ocean } = this.context\n        const account = await ocean.accounts.list()\n        const newAsset = {\n            // OEP-08 Attributes\n            // https://github.com/oceanprotocol/OEPs/tree/master/8\n            base: Object.assign(AssetModel.base, {\n                name: this.state.name,\n                description: this.state.description,\n                dateCreated: new Date(this.state.dateCreated).toISOString(),\n                author: this.state.author,\n                license: this.state.license,\n                copyrightHolder: this.state.copyrightHolder,\n                files: this.state.files,\n                price: this.state.price,\n                type: this.state.type,\n                categories: [this.state.categories],\n                workExample: undefined,\n                inLanguage: undefined,\n                tags: ''\n            }),\n            curation: Object.assign(AssetModel.curation),\n            additionalInformation: Object.assign(\n                AssetModel.additionalInformation\n            )\n        }\n\n        try {\n            const asset = await this.context.ocean.assets.create(\n                newAsset,\n                account[0]\n            )\n            this.setState({\n                publishedDid: asset.id,\n                isPublished: true\n            })\n            ReactGA.event({\n                category: 'Publish',\n                action: 'registerAsset-end' + asset.id\n            })\n        } catch (e) {\n            // make readable errors\n            Logger.log('error:', e)\n            this.setState({\n                publishingError: e.message\n            })\n            ReactGA.event({\n                category: 'Publish',\n                action: 'registerAsset-error' + e.message\n            })\n        }\n        this.setState({\n            isPublishing: false\n        })\n    }\n\n    public render() {\n        return (\n            <Route\n                title=\"Publish\"\n                description=\"Publish a new data set into the Ocean Protocol Network.\"\n            >\n                <Progress steps={steps} currentStep={this.state.currentStep} />\n\n                <Form onSubmit={this.registerAsset}>\n                    {steps.map((step: any, index: number) => (\n                        <Step\n                            key={index}\n                            index={index}\n                            title={step.title}\n                            description={step.description}\n                            currentStep={this.state.currentStep}\n                            fields={step.fields}\n                            inputChange={this.inputChange}\n                            inputToArrayChange={this.inputToArrayChange}\n                            state={this.state}\n                            next={this.next}\n                            prev={this.prev}\n                            totalSteps={steps.length}\n                            tryAgain={this.tryAgain}\n                            toStart={this.toStart}\n                            content={step.content}\n                        />\n                    ))}\n                </Form>\n            </Route>\n        )\n    }\n}\n\nPublish.contextType = User\nexport default Publish\n"]},"metadata":{},"sourceType":"module"}