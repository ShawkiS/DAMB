{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\components\\\\organisms\\\\Web3message.tsx\";\nimport React, { PureComponent } from 'react';\nimport Button from '../atoms/Button';\nimport AccountStatus from '../molecules/AccountStatus';\nimport styles from './Web3message.module.scss';\nimport { User } from '../../context/User';\n\nvar Web3message =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Web3message, _PureComponent);\n\n  function Web3message() {\n    _classCallCheck(this, Web3message);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Web3message).apply(this, arguments));\n  }\n\n  _createClass(Web3message, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(User.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, function (states) {\n        return !states.isWeb3 ? _this.noWeb3() : !states.isNile ? _this.wrongNetwork(states.network) : !states.isLogged ? _this.unlockAccount(states) : states.isLogged ? _this.haveAccount(states.account) : null;\n      });\n    }\n  }, {\n    key: \"noWeb3\",\n    value: function noWeb3() {\n      return React.createElement(\"div\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(AccountStatus, {\n        className: styles.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), \" Not a Web3 Browser. For publishing or consuming an asset you need to\", ' ', React.createElement(\"a\", {\n        href: \"https://docs.oceanprotocol.com/tutorials/metamask-setup/\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"setup MetaMask\"), ' ', \"or use any other Web3-capable plugin or browser.\");\n    }\n  }, {\n    key: \"unlockAccount\",\n    value: function unlockAccount(states) {\n      return React.createElement(\"div\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(AccountStatus, {\n        className: styles.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \" Account locked. For publishing an asset you need to unlock your Web3 account.\", ' ', React.createElement(Button, {\n        link: true,\n        onClick: states.startLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Unlock account\"));\n    }\n  }, {\n    key: \"haveAccount\",\n    value: function haveAccount(account) {\n      return React.createElement(\"div\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(AccountStatus, {\n        className: styles.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), \" Connected with account\", React.createElement(\"code\", {\n        className: styles.account,\n        title: account && account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"\".concat(account && account.substring(0, 20), \"...\")));\n    }\n  }, {\n    key: \"wrongNetwork\",\n    value: function wrongNetwork(network) {\n      return React.createElement(\"div\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(AccountStatus, {\n        className: styles.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \" Not connected to Nile network, but to \", network, \".\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"Please connect in MetaMask with Custom RPC\", ' ', React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"https://nile.dev-ocean.com\"));\n    }\n  }]);\n\n  return Web3message;\n}(PureComponent);\n\nexport { Web3message as default };","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\components\\organisms\\Web3message.tsx"],"names":["React","PureComponent","Button","AccountStatus","styles","User","Web3message","states","isWeb3","noWeb3","isNile","wrongNetwork","network","isLogged","unlockAccount","haveAccount","account","message","status","startLogin","substring"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,IAAT,QAAqB,oBAArB;;IAEqBC,W;;;;;;;;;;;;;6BACD;AAAA;;AACZ,aACI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAAC,MAAM;AAAA,eACH,CAACA,MAAM,CAACC,MAAR,GACM,KAAI,CAACC,MAAL,EADN,GAEM,CAACF,MAAM,CAACG,MAAR,GACA,KAAI,CAACC,YAAL,CAAkBJ,MAAM,CAACK,OAAzB,CADA,GAEA,CAACL,MAAM,CAACM,QAAR,GACA,KAAI,CAACC,aAAL,CAAmBP,MAAnB,CADA,GAEAA,MAAM,CAACM,QAAP,GACA,KAAI,CAACE,WAAL,CAAiBR,MAAM,CAACS,OAAxB,CADA,GAEA,IATH;AAAA,OADX,CADJ;AAeH;;;6BAEe;AACZ,aACI;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACa,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEb,MAAM,CAACc,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,2EAEqD,GAFrD,EAGI;AACI,QAAA,IAAI,EAAC,0DADT;AAEI,QAAA,MAAM,EAAC,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAQS,GART,qDADJ;AAaH;;;kCAEoBX,M,EAAa;AAC9B,aACI;AAAK,QAAA,SAAS,EAAEH,MAAM,CAACa,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEb,MAAM,CAACc,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,oFAE8D,GAF9D,EAGI,oBAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,EAAEX,MAAM,CAACY,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,CADJ;AASH;;;gCAEkBH,O,EAAiB;AAChC,aACI;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACa,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEb,MAAM,CAACc,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,6BAGI;AAAM,QAAA,SAAS,EAAEd,MAAM,CAACY,OAAxB;AAAiC,QAAA,KAAK,EAAEA,OAAO,IAAIA,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQA,OAAO,IAAIA,OAAO,CAACI,SAAR,CAAkB,CAAlB,EAAqB,EAArB,CADnB,SAHJ,CADJ;AASH;;;iCAEmBR,O,EAAiB;AACjC,aACI;AAAK,QAAA,SAAS,EAAER,MAAM,CAACa,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEb,MAAM,CAACc,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,6CAE0BN,OAF1B,OAEmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFnC,gDAG+C,GAH/C,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJJ,CADJ;AAQH;;;;EApEoCX,a;;SAApBK,W","sourcesContent":["import React, { PureComponent } from 'react'\nimport Button from '../atoms/Button'\nimport AccountStatus from '../molecules/AccountStatus'\nimport styles from './Web3message.module.scss'\nimport { User } from '../../context/User'\n\nexport default class Web3message extends PureComponent {\n    public render() {\n        return (\n            <User.Consumer>\n                {states =>\n                    !states.isWeb3\n                        ? this.noWeb3()\n                        : !states.isNile\n                        ? this.wrongNetwork(states.network)\n                        : !states.isLogged\n                        ? this.unlockAccount(states)\n                        : states.isLogged\n                        ? this.haveAccount(states.account)\n                        : null\n                }\n            </User.Consumer>\n        )\n    }\n\n    public noWeb3() {\n        return (\n            <div className={styles.message}>\n                <AccountStatus className={styles.status} /> Not a Web3 Browser.\n                For publishing or consuming an asset you need to{' '}\n                <a\n                    href=\"https://docs.oceanprotocol.com/tutorials/metamask-setup/\"\n                    target=\"_blank\"\n                >\n                    setup MetaMask\n                </a>{' '}\n                or use any other Web3-capable plugin or browser.\n            </div>\n        )\n    }\n\n    public unlockAccount(states: any) {\n        return (\n            <div className={styles.message}>\n                <AccountStatus className={styles.status} /> Account locked. For\n                publishing an asset you need to unlock your Web3 account.{' '}\n                <Button link onClick={states.startLogin}>\n                    Unlock account\n                </Button>\n            </div>\n        )\n    }\n\n    public haveAccount(account: string) {\n        return (\n            <div className={styles.message}>\n                <AccountStatus className={styles.status} /> Connected with\n                account\n                <code className={styles.account} title={account && account}>\n                    {`${account && account.substring(0, 20)}...`}\n                </code>\n            </div>\n        )\n    }\n\n    public wrongNetwork(network: string) {\n        return (\n            <div className={styles.message}>\n                <AccountStatus className={styles.status} /> Not connected to\n                Nile network, but to {network}.<br />\n                Please connect in MetaMask with Custom RPC{' '}\n                <code>{`https://nile.dev-ocean.com`}</code>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}