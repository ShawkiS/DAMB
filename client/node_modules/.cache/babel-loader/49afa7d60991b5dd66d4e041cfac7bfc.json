{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\commons-0.1.0\\\\client\\\\src\\\\routes\\\\Publish\\\\Files\\\\index.tsx\";\nimport React, { PureComponent } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Button from '../../../components/atoms/Button';\nimport Help from '../../../components/atoms/Form/Help';\nimport ItemForm from './ItemForm';\nimport Item from './Item';\nimport styles from './index.module.scss';\nimport { serviceHost, servicePort, serviceScheme } from '../../../config/config';\n\nvar getFileCompression =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(contentType) {\n    var contentTypeSplit;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(contentType === 'application/zip' || contentType === 'application/gzip' || contentType === 'application/x-lzma' || contentType === 'application/x-xz' || contentType === 'application/x-tar' || contentType === 'application/x-gtar' || contentType === 'application/x-bzip2' || contentType === 'application/x-7z-compressed' || contentType === 'application/x-rar-compressed' || contentType === 'application/x-apple-diskimage')) {\n              _context.next = 7;\n              break;\n            }\n\n            contentTypeSplit = contentType.split('/');\n\n            if (!contentTypeSplit[1].includes('x-')) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", contentTypeSplit[1].replace('x-', ''));\n\n          case 4:\n            return _context.abrupt(\"return\", contentTypeSplit[1]);\n\n          case 7:\n            return _context.abrupt(\"return\", 'none');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getFileCompression(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Files =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Files, _PureComponent);\n\n  function Files() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Files);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Files)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isFormShown: false\n    };\n\n    _this.toggleForm = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isFormShown: !_this.state.isFormShown\n      });\n    };\n\n    _this.addItem =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(value) {\n        var res, file, response, event;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                file = {\n                  url: value,\n                  found: false,\n                  contentLength: 0,\n                  contentType: '',\n                  compression: ''\n                };\n                _context2.prev = 1;\n                _context2.next = 4;\n                return fetch(\"\".concat(serviceScheme, \"://\").concat(serviceHost, \":\").concat(servicePort, \"/api/v1/urlcheck\"), {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    url: value\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                res = _context2.sent;\n                file.contentLength = res.result.contentLength;\n                file.contentType = res.result.contentType;\n                _context2.next = 12;\n                return getFileCompression(res.result.contentType);\n\n              case 12:\n                file.compression = _context2.sent;\n                file.found = res.result.found;\n                _context2.next = 18;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](1);\n\n              case 18:\n                _this.props.files.push(file);\n\n                event = {\n                  currentTarget: {\n                    name: 'files',\n                    value: _this.props.files\n                  }\n                };\n\n                _this.props.onChange(event);\n\n                _this.setState({\n                  isFormShown: !_this.state.isFormShown\n                });\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 16]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.removeItem = function (index) {\n      _this.props.files.splice(index, 1);\n\n      var event = {\n        currentTarget: {\n          name: 'files',\n          value: _this.props.files\n        }\n      };\n\n      _this.props.onChange(event);\n\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(Files, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isFormShown = this.state.isFormShown;\n      var _this$props = this.props,\n          files = _this$props.files,\n          help = _this$props.help,\n          placeholder = _this$props.placeholder,\n          name = _this$props.name,\n          onChange = _this$props.onChange;\n      return React.createElement(React.Fragment, null, help && React.createElement(Help, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, help), React.createElement(\"input\", {\n        type: \"hidden\",\n        name: name,\n        value: JSON.stringify(files),\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.newItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, files.length > 0 && React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: styles.itemsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, files.map(function (item, index) {\n        return React.createElement(CSSTransition, {\n          key: index,\n          timeout: 400,\n          classNames: \"fade\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Item, {\n          item: item,\n          removeItem: function removeItem() {\n            return _this2.removeItem(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }));\n      })), React.createElement(Button, {\n        link: true,\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, isFormShown ? '- Cancel' : '+ Add a file'), React.createElement(CSSTransition, {\n        classNames: \"grow\",\n        in: isFormShown,\n        timeout: 200,\n        unmountOnExit: true,\n        onExit: function onExit() {\n          return _this2.setState({\n            isFormShown: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(ItemForm, {\n        placeholder: placeholder,\n        addItem: this.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Files;\n}(PureComponent);\n\nexport { Files as default };","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\commons-0.1.0\\client\\src\\routes\\Publish\\Files\\index.tsx"],"names":["React","PureComponent","CSSTransition","TransitionGroup","Button","Help","ItemForm","Item","styles","serviceHost","servicePort","serviceScheme","getFileCompression","contentType","contentTypeSplit","split","includes","replace","Files","state","isFormShown","toggleForm","e","preventDefault","setState","addItem","value","file","url","found","contentLength","compression","fetch","method","body","JSON","stringify","headers","response","json","res","result","props","files","push","event","currentTarget","name","onChange","removeItem","index","splice","forceUpdate","help","placeholder","newItems","length","itemsList","map","item"],"mappings":"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","sourcesContent":["import React, { FormEvent, PureComponent, ChangeEvent } from 'react'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport Button from '../../../components/atoms/Button'\nimport Help from '../../../components/atoms/Form/Help'\nimport ItemForm from './ItemForm'\nimport Item from './Item'\nimport styles from './index.module.scss'\n\nimport { serviceHost, servicePort, serviceScheme } from '../../../config/config'\n\ninterface File {\n    url: string\n    found: boolean\n    checksum?: string\n    checksumType?: string\n    contentLength?: number\n    contentType?: string\n    resourceId?: string\n    encoding?: string\n    compression?: string\n}\n\ninterface FilesProps {\n    files: File[]\n    placeholder: string\n    help?: string\n    name: string\n    onChange(\n        event:\n            | ChangeEvent<HTMLInputElement>\n            | FormEvent<HTMLInputElement>\n            | ChangeEvent<HTMLSelectElement>\n            | ChangeEvent<HTMLTextAreaElement>\n    ): void\n}\n\ninterface FilesStates {\n    isFormShown: boolean\n}\n\nconst getFileCompression = async (contentType: string) => {\n    // TODO: add all the possible archive & compression MIME types\n    if (\n        contentType === 'application/zip' ||\n        contentType === 'application/gzip' ||\n        contentType === 'application/x-lzma' ||\n        contentType === 'application/x-xz' ||\n        contentType === 'application/x-tar' ||\n        contentType === 'application/x-gtar' ||\n        contentType === 'application/x-bzip2' ||\n        contentType === 'application/x-7z-compressed' ||\n        contentType === 'application/x-rar-compressed' ||\n        contentType === 'application/x-apple-diskimage'\n    ) {\n        const contentTypeSplit = contentType.split('/')\n\n        if (contentTypeSplit[1].includes('x-')) {\n            return contentTypeSplit[1].replace('x-', '')\n        }\n\n        return contentTypeSplit[1]\n    } else {\n        return 'none'\n    }\n}\n\nexport default class Files extends PureComponent<FilesProps, FilesStates> {\n    public state: FilesStates = {\n        isFormShown: false\n    }\n\n    public toggleForm = (e: Event) => {\n        e.preventDefault()\n\n        this.setState({ isFormShown: !this.state.isFormShown })\n    }\n\n    public addItem = async (value: string) => {\n        let res: any\n        let file: File = {\n            url: value,\n            found: false,\n            contentLength: 0,\n            contentType: '',\n            compression: ''\n        }\n\n        try {\n            const response = await fetch(\n                `${serviceScheme}://${serviceHost}:${servicePort}/api/v1/urlcheck`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({ url: value }),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            )\n            res = await response.json()\n            file.contentLength = res.result.contentLength\n            file.contentType = res.result.contentType\n            file.compression = await getFileCompression(res.result.contentType)\n            file.found = res.result.found\n        } catch (error) {\n            // error\n        }\n        this.props.files.push(file)\n        const event = {\n            currentTarget: {\n                name: 'files',\n                value: this.props.files\n            }\n        }\n        this.props.onChange(event as any)\n        this.setState({ isFormShown: !this.state.isFormShown })\n    }\n\n    public removeItem = (index: number) => {\n        this.props.files.splice(index, 1)\n        const event = {\n            currentTarget: {\n                name: 'files',\n                value: this.props.files\n            }\n        }\n        this.props.onChange(event as any)\n        this.forceUpdate()\n    }\n\n    public render() {\n        const { isFormShown } = this.state\n        const { files, help, placeholder, name, onChange } = this.props\n\n        return (\n            <>\n                {help && <Help>{help}</Help>}\n\n                {/* Use hidden input to collect files */}\n                <input\n                    type=\"hidden\"\n                    name={name}\n                    value={JSON.stringify(files)}\n                    onChange={onChange}\n                />\n\n                <div className={styles.newItems}>\n                    {files.length > 0 && (\n                        <TransitionGroup\n                            component=\"ul\"\n                            className={styles.itemsList}\n                        >\n                            {files.map((item: any, index: number) => (\n                                <CSSTransition\n                                    key={index}\n                                    timeout={400}\n                                    classNames=\"fade\"\n                                >\n                                    <Item\n                                        item={item}\n                                        removeItem={() =>\n                                            this.removeItem(index)\n                                        }\n                                    />\n                                </CSSTransition>\n                            ))}\n                        </TransitionGroup>\n                    )}\n\n                    <Button link onClick={this.toggleForm}>\n                        {isFormShown ? '- Cancel' : '+ Add a file'}\n                    </Button>\n\n                    <CSSTransition\n                        classNames=\"grow\"\n                        in={isFormShown}\n                        timeout={200}\n                        unmountOnExit\n                        onExit={() => this.setState({ isFormShown: false })}\n                    >\n                        <ItemForm\n                            placeholder={placeholder}\n                            addItem={this.addItem}\n                        />\n                    </CSSTransition>\n                </div>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}