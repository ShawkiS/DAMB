import ContractBase from "../ContractBase";
import { InstantiableConfig } from "../../../Instantiable.abstract";
export declare enum TemplateState {
    Uninitialized = 0,
    Proposed = 1,
    Approved = 2,
    Revoked = 3
}
export interface TemplateMetadata {
    state: TemplateState;
    owner: string;
    lastUpdatedBy: string;
    blockNumberUpdated: number;
}
export declare class TemplateStoreManager extends ContractBase {
    static getInstance(config: InstantiableConfig): Promise<TemplateStoreManager>;
    getOwner(): Promise<string>;
    proposeTemplate(address: string, from?: string, ignoreExists?: boolean): Promise<any>;
    approveTemplate(address: string, from?: string, ignoreApproved?: boolean): Promise<any>;
    revokeTemplate(address: string, from?: string): Promise<any>;
    getTemplate(address: string): Promise<TemplateMetadata>;
}
