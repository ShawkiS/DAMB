import ContractBase from "./contracts/ContractBase";
interface EventEmitter {
    subscribe: Function;
    unsubscribe: Function;
}
export interface ContractEventSubscription {
    unsubscribe: () => void;
}
export declare class ContractEvent {
    private eventEmitter;
    private contract;
    private eventName;
    private filter;
    constructor(eventEmitter: EventEmitter, contract: ContractBase, eventName: string, filter: {
        [key: string]: any;
    });
    subscribe(callback: (events: any[]) => void): ContractEventSubscription;
    once(callback?: (events: any[]) => void): Promise<{}>;
}
export {};
