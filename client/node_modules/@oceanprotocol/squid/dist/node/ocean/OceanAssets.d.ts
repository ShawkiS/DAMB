import { SearchQuery } from "../aquarius/Aquarius";
import { DDO } from "../ddo/DDO";
import { MetaData } from "../ddo/MetaData";
import { Service } from "../ddo/Service";
import Account from "./Account";
import { Instantiable, InstantiableConfig } from "../Instantiable.abstract";
export declare class OceanAssets extends Instantiable {
    static getInstance(config: InstantiableConfig): Promise<OceanAssets>;
    resolve(did: string): Promise<DDO>;
    create(metadata: MetaData, publisher: Account, services?: Service[]): Promise<DDO>;
    consume(agreementId: string, did: string, serviceDefinitionId: string, consumerAccount: Account, resultPath: string, index?: number): Promise<string>;
    consume(agreementId: string, did: string, serviceDefinitionId: string, consumerAccount: Account, resultPath?: undefined | null, index?: number): Promise<true>;
    order(did: string, serviceDefinitionId: string, consumer: Account): Promise<string>;
    query(query: SearchQuery): Promise<import("../aquarius/Aquarius").QueryResult>;
    search(text: string): Promise<import("../aquarius/Aquarius").QueryResult>;
}
