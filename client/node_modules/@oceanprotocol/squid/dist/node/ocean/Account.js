"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var bignumber_js_1 = require("bignumber.js");
var EthJsUtils = require("ethereumjs-util");
var Instantiable_abstract_1 = require("../Instantiable.abstract");
var Account = (function (_super) {
    __extends(Account, _super);
    function Account(id, config) {
        if (id === void 0) { id = "0x0"; }
        var _this = _super.call(this) || this;
        _this.id = id;
        if (config) {
            _this.setInstanceConfig(config);
        }
        return _this;
    }
    Account.prototype.getId = function () {
        return this.id;
    };
    Account.prototype.setId = function (id) {
        this.id = id;
    };
    Account.prototype.setPassword = function (password) {
        this.password = password;
    };
    Account.prototype.getPassword = function () {
        return this.password;
    };
    Account.prototype.getOceanBalance = function () {
        return __awaiter(this, void 0, void 0, function () {
            var token, _a, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        token = this.ocean.keeper.token;
                        return [4, token.balanceOf(this.id)];
                    case 1:
                        _a = (_e.sent());
                        _c = (_b = Math).pow;
                        _d = [10];
                        return [4, token.decimals()];
                    case 2: return [2, _a / (_c.apply(_b, _d.concat([_e.sent()])))];
                }
            });
        });
    };
    Account.prototype.getEtherBalance = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.web3
                        .eth
                        .getBalance(this.id, "latest")
                        .then(function (balance) {
                        return new bignumber_js_1.default(balance).toNumber();
                    })];
            });
        });
    };
    Account.prototype.getBalance = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = {};
                        return [4, this.getEtherBalance()];
                    case 1:
                        _a.eth = _b.sent();
                        return [4, this.getOceanBalance()];
                    case 2: return [2, (_a.ocn = _b.sent(),
                            _a)];
                }
            });
        });
    };
    Account.prototype.requestTokens = function (amount) {
        return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4, this.ocean.keeper
                                .dispenser
                                .requestTokens(amount, this.id)];
                    case 1:
                        _a.sent();
                        return [3, 3];
                    case 2:
                        e_1 = _a.sent();
                        this.logger.error(e_1);
                        throw new Error("Error requesting tokens");
                    case 3: return [2, amount];
                }
            });
        });
    };
    Account.prototype.getPublicKey = function () {
        return __awaiter(this, void 0, void 0, function () {
            var msg, sig, _a, v, r, s;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        msg = this.web3.utils.sha3(this.getId());
                        return [4, this.web3.eth.sign(msg, this.getId())];
                    case 1:
                        sig = _b.sent();
                        _a = EthJsUtils.fromRpcSig(sig), v = _a.v, r = _a.r, s = _a.s;
                        return [2, EthJsUtils.ecrecover(EthJsUtils.toBuffer(msg), v, r, s).toString("hex")];
                }
            });
        });
    };
    return Account;
}(Instantiable_abstract_1.Instantiable));
exports.default = Account;
//# sourceMappingURL=Account.js.map