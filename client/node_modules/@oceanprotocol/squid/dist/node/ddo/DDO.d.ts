import * as Web3 from "web3";
import { Ocean } from "../ocean/Ocean";
import { Authentication } from "./Authentication";
import { Proof } from "./Proof";
import { PublicKey } from "./PublicKey";
import { Service, ServiceType } from "./Service";
export declare class DDO {
    static serialize(ddo: DDO): string;
    static deserialize(ddoString: string): DDO;
    "@context": string;
    id: string;
    created: string;
    publicKey: PublicKey[];
    authentication: Authentication[];
    service: Service[];
    proof: Proof;
    constructor(ddo?: Partial<DDO>);
    shortId(): string;
    findServiceById<T extends ServiceType>(serviceDefinitionId: string): Service<T>;
    findServiceByType<T extends ServiceType>(serviceType: T): Service<T>;
    getChecksum(): string;
    generateProof(ocean: Ocean, publicKey: string, password?: string): Promise<Proof>;
    addChecksum(): void;
    addProof(web3: Web3, publicKey: string, password?: string): Promise<void>;
}
